<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Home</title><link>https://posulliv.github.io/posts/</link><description>Recent content in Posts on Home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Apr 2022 08:07:29 -0400</lastBuildDate><atom:link href="https://posulliv.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploying Trino on Google Cloud with helm</title><link>https://posulliv.github.io/posts/trino-helm/</link><pubDate>Mon, 04 Apr 2022 08:07:29 -0400</pubDate><guid>https://posulliv.github.io/posts/trino-helm/</guid><description>This article was written using version 0.8.0 of the Trino community helm charts and version 1.21.9-gke.1002 of Kubernetes.
In this article, we are going to walk through deploying Trino with the community helm charts on the Google Cloud Platform.
This article assumes you already have a Kubernetes cluster created in Google Cloud and have a connection to it configured for kubectl.
We&amp;rsquo;ll start with a simple bare bones deployment and progress from there.</description></item><item><title>ORC bloom filters in Trino</title><link>https://posulliv.github.io/posts/orc-bloom-filters/</link><pubDate>Thu, 03 Mar 2022 08:28:51 -0500</pubDate><guid>https://posulliv.github.io/posts/orc-bloom-filters/</guid><description>This article was written using the 371 Trino release.
Predicate pushdown is a great feature in Trino but there are times when a predicate is pushed down by the Hive connector that does not result in any data being filtered. This article will discuss using bloom filters to improve the effectiveness of predicate pushdown for equality or IN predicates.
Bloom filters are a probabilistic data structure used for set membership tests.</description></item><item><title>Updating resource groups without restarting Trino</title><link>https://posulliv.github.io/posts/dynamic-resource-groups/</link><pubDate>Tue, 01 Mar 2022 10:25:06 -0500</pubDate><guid>https://posulliv.github.io/posts/dynamic-resource-groups/</guid><description>Resource groups is an admission control feature in Trino. Typically, this is configured by storing the resource groups configuration in a JSON file and telling Trino where to read this file from. Any updates to the JSON file are not reflected in Trino until the cluster is restarted.
Recently, I was working on a cluster that had a requirement to be able to update resource group defintions without restarting the cluster.</description></item><item><title>Notes on writing with the Hive connector in Trino</title><link>https://posulliv.github.io/posts/writes-from-trino/</link><pubDate>Tue, 01 Feb 2022 08:27:52 -0500</pubDate><guid>https://posulliv.github.io/posts/writes-from-trino/</guid><description>File size is probably the single largest contributor to poor query performance that I see when working with Trino. In this post, I wanted to cover the case where we are writing data through Trino using the Hive connector and how to control the size of files created in that case.
These notes are based on the latest Trino release at the time of writing - 370. Where appropriate, I have linked to open github issues that may change some of the behavior discussed here.</description></item><item><title>Coordinator HA in Trino with reverse nginx proxy</title><link>https://posulliv.github.io/posts/coordinator-ha/</link><pubDate>Mon, 10 Jan 2022 11:18:51 -0500</pubDate><guid>https://posulliv.github.io/posts/coordinator-ha/</guid><description>All config files and a full docker-compose.yaml file for recreating what is covered in this article can be found in this github repository.
This article demonstrates how coordinator HA can be achieved with an nginx reverse proxy using docker. Note that this is not a production setup. The intent of this article is to show how coordinator HA can be achieved. I&amp;rsquo;ve used similar concepts with real-world deployments but I&amp;rsquo;ve used a hardware load balancer instead of nginx for this in production.</description></item></channel></rss>